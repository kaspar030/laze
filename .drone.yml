---
kind: pipeline
type: docker
name: default

clone:
  git:
  image: plugins/git:next

steps:
  - name: test
    image: rust:latest
    environment:
      COVERALLS_TOKEN:
        from_secret: COVERALL_TOKEN
    commands:
      - "#"
      - "# installing prerequisites"
      - "#"
      - apt-get update
      - apt-get install -y ninja-build python3-requests
      - curl -L https://github.com/mozilla/grcov/releases/download/v0.8.2/grcov-linux-x86_64.tar.bz2 | tar jxf -
        #- cargo install grcov --version 0.6.1
      - rustup toolchain install nightly
      - rustup +nightly component add llvm-tools-preview
      - cargo install --locked cargo-udeps
      - "#"
      - "# configure git"
      - git config --global init.defaultBranch main

      - "#"
      - "# compiling with stable rust"
      - "#"
      - cargo build

      - "#"
      - "# stable unittests"
      - "#"
      - cargo test --verbose --all

      - "#"
      - "# stable end-to-end tests"
      - "#"
      - 'LAZE=$(pwd)/target/debug/laze make -C src/tests'

      - "#"
      - "# compiling with nightly rust"
      - "#"
      - 'RUSTFLAGS="-Cinstrument-coverage" cargo +nightly build'

      - "#"
      - "# nightly unittests"
      - "#"
      - 'RUSTFLAGS="-Cinstrument-coverage" cargo +nightly test'

      - "#"
      - "# end-to-end tests"
      - "#"
      - 'LAZE=$(pwd)/target/debug/laze make -C src/tests || true'

      - "#"
      - "# checking for unused dependencies"
      - "#"
      - cargo +nightly udeps

      - "#"
      - "# uploading coverage results"
      - "#"
      - >
        RUSTUP_TOOLCHAIN=nightly
        ./grcov
        $(find . -name 'default*profraw' -print)
        --token $${COVERALLS_TOKEN}
        --commit-sha $${DRONE_COMMIT}
        --service-name drone.schleiser.de
        --service-number $${DRONE_BUILD_NUMBER}
        --vcs-branch $${DRONE_COMMIT_BRANCH}
        --binary-path ./target/debug/laze
        --branch
        --output-path coveralls.json
        --output-type coveralls+
        --source-dir .
        --ignore "/*" &&

        python3 dist/coveralls.py coveralls.json
        || true # temporarily allow an arror
---
kind: signature
hmac: 07183d90f3dd8bb51a07a74d44e1f840670a5054a02a107ced656fa63ed8741f

...
