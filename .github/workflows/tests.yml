name: CI

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:
  udeps:
    runs-on: ubuntu-latest
    env:
      SCCACHE_GHA_ENABLED: "true"
      RUSTC_WRAPPER: "sccache"
    steps:
    - name: Run sccache-cache
      uses: mozilla-actions/sccache-action@v0.0.3

    - name: rust cache
      uses: Swatinem/rust-cache@v2

    - name: Install latest nightly
      uses: dtolnay/rust-toolchain@nightly

    - uses: taiki-e/install-action@v2
      with:
        tool: cargo-binstall

    - name: "installing cargo-udeps"
      run: cargo binstall -y --no-symlinks --force cargo-udeps

    - name: Check out repository code
      uses: actions/checkout@v3

    - name: "checking for unused dependencies"
      run: cargo +nightly udeps

  msrv:
    runs-on: ubuntu-latest
    env:
      SCCACHE_GHA_ENABLED: "true"
      RUSTC_WRAPPER: "sccache"
    steps:
    - name: Run sccache-cache
      uses: mozilla-actions/sccache-action@v0.0.3

    - name: rust cache
      uses: Swatinem/rust-cache@v2

    - uses: taiki-e/install-action@v2
      with:
        tool: cargo-binstall

    - name: "Installing cargo-udeps"
      run: cargo binstall -y --no-symlinks --force cargo-msrv

    - name: Check out repository code
      uses: actions/checkout@v3

    - name: "Verifying MSRV"
      run: cargo msrv verify

  test:
    strategy:
      matrix:
        toolchain: [ nightly, stable ]
    runs-on: ubuntu-latest
    env:
      SCCACHE_GHA_ENABLED: "true"
      RUSTC_WRAPPER: "sccache"

    # this strips the date suffix from the github job name so we don't have to
    # touch our required statusses list.
    name: test (${{ startsWith(matrix.toolchain, 'nightly') && 'nightly' || matrix.toolchain }})

    steps:
    - name: Check out repository code
      uses: actions/checkout@v3

    - uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.toolchain }}
        components: llvm-tools

    - name: rust cache
      uses: Swatinem/rust-cache@v2

    - name: Run sccache-cache
      uses: mozilla-actions/sccache-action@v0.0.3

    - uses: taiki-e/install-action@v2
      with:
        tool: grcov,cargo-binstall

    - name: "installing prerequisites"
      run: |
        sudo apt-get install -y ninja-build python3-requests
        git config --global init.defaultBranch main
        git config --global user.email "ci@riot-labs.de"
        git config --global user.name "CI"

    - name: "build"
      run: "RUSTFLAGS=-Cinstrument-coverage cargo +${{ matrix.toolchain }} build"

    - name: "unittests"
      run: "RUSTFLAGS=-Cinstrument-coverage cargo +${{ matrix.toolchain }} test"

    - name: "end-to-end tests"
      run: "LAZE=$(pwd)/target/debug/laze make -C src/tests"

    - name: "collect coverage results"
      if: ${{ startsWith(matrix.toolchain, 'nightly') }}
      run: >
       RUSTUP_TOOLCHAIN=${{ matrix.toolchain }}
       grcov
       $(find . -name 'default*profraw' -print)
       --binary-path ./target/debug/laze
       --branch
       --output-path ./lcov.info
       --output-type lcov
       --source-dir .
       --ignore "/*"

    - name: Coveralls
      if: ${{ startsWith(matrix.toolchain, 'nightly') }}
      uses: coverallsapp/github-action@v1
      with:
        path-to-lcov: "lcov.info"
